
import java.awt.Color;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 489516
 */
public class RemoveDialog extends javax.swing.JDialog {
    
    private MyHashTable sharedHash;
    private int empNumToRemove;

    /**
     * Creates new form RemoveDialog
     */
    public RemoveDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        cancelButton.requestFocusInWindow();
        searchField.setUI(new HintTextFieldUI("Search by employee number",true,Color.lightGray));
        removeButton.setEnabled(false);
    }
    
    public void setSharedHash(MyHashTable hashIn) {
        sharedHash = hashIn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        contextLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(RemoveDialog.class, "RemoveDialog.title")); // NOI18N
        setPreferredSize(new java.awt.Dimension(420, 150));

        searchField.setText(org.openide.util.NbBundle.getMessage(RemoveDialog.class, "RemoveDialog.searchField.text")); // NOI18N
        searchField.setMinimumSize(new java.awt.Dimension(295, 20));
        searchField.setPreferredSize(new java.awt.Dimension(295, 20));
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onTextFieldEnter(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(searchButton, org.openide.util.NbBundle.getMessage(RemoveDialog.class, "RemoveDialog.searchButton.text")); // NOI18N
        searchButton.setMaximumSize(new java.awt.Dimension(75, 23));
        searchButton.setMinimumSize(new java.awt.Dimension(75, 23));
        searchButton.setPreferredSize(new java.awt.Dimension(75, 23));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSearchPressed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(cancelButton, org.openide.util.NbBundle.getMessage(RemoveDialog.class, "RemoveDialog.cancelButton.text")); // NOI18N
        cancelButton.setMaximumSize(new java.awt.Dimension(75, 23));
        cancelButton.setMinimumSize(new java.awt.Dimension(75, 23));
        cancelButton.setPreferredSize(new java.awt.Dimension(75, 23));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCancelPressed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(removeButton, org.openide.util.NbBundle.getMessage(RemoveDialog.class, "RemoveDialog.removeButton.text")); // NOI18N
        removeButton.setMaximumSize(new java.awt.Dimension(75, 23));
        removeButton.setMinimumSize(new java.awt.Dimension(75, 23));
        removeButton.setPreferredSize(new java.awt.Dimension(75, 23));
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onRemovePressed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(contextLabel, org.openide.util.NbBundle.getMessage(RemoveDialog.class, "RemoveDialog.contextLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(contextLabel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(contextLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onTextFieldEnter(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onTextFieldEnter
        // TODO add your handling code here:
        searchButton.doClick();
    }//GEN-LAST:event_onTextFieldEnter

    private void onSearchPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSearchPressed
        // TODO add your handling code here:
        // if num in hash, switch card layout to confirmation label
        try {
            empNumToRemove = Integer.valueOf(searchField.getText());
        }
        catch (NumberFormatException ex) {
            empNumToRemove = -1;
        }
        if (empNumToRemove > 0) {
            if (sharedHash.isInTable(empNumToRemove)) {
                String name = "["+sharedHash.readFromTable(empNumToRemove).firstName + " " + sharedHash.readFromTable(empNumToRemove).lastName+"]";
                contextLabel.setText("Remove " + name + " from the system?");
                removeButton.setEnabled(true);
                //removeButton.requestFocusInWindow();
            }
            else {
                contextLabel.setText("No such employee found in the system.");
                removeButton.setEnabled(false);
            }
        }
        else {
            contextLabel.setText("No such employee found in the system.");
            removeButton.setEnabled(false);
        }
    }//GEN-LAST:event_onSearchPressed

    private void onCancelPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCancelPressed
        // TODO add your handling code here:
        empNumToRemove = -1;
        this.dispose();
    }//GEN-LAST:event_onCancelPressed

    private void onRemovePressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onRemovePressed
        // TODO add your handling code here:
        // call removeFromHash, passing in entry from search field
        this.dispose();
    }//GEN-LAST:event_onRemovePressed

    public int getRemoveResult() {
        return empNumToRemove;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RemoveDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RemoveDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RemoveDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RemoveDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RemoveDialog dialog = new RemoveDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel contextLabel;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    // End of variables declaration//GEN-END:variables
}
